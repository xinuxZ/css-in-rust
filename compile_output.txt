   Compiling css-in-rust v0.1.0 (/Users/zxl/Sites/rust/UI/css-in-rust/css-in-rust)
warning: unused import: `std::collections::HashMap`
 --> css-in-rust/src/dev_experience/mod.rs:5:5
  |
5 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::thread`
 --> css-in-rust/src/dev_experience/diagnostics.rs:8:5
  |
8 | use std::thread;
  |     ^^^^^^^^^^^

warning: unused imports: `Duration` and `Instant`
 --> css-in-rust/src/dev_experience/diagnostics.rs:9:17
  |
9 | use std::time::{Duration, Instant};
  |                 ^^^^^^^^  ^^^^^^^

warning: unused import: `Path`
  --> css-in-rust/src/dev_experience/enhanced_hot_reload.rs:12:17
   |
12 | use std::path::{Path, PathBuf};
   |                 ^^^^

warning: unused import: `Duration`
  --> css-in-rust/src/dev_experience/enhanced_hot_reload.rs:14:17
   |
14 | use std::time::{Duration, Instant};
   |                 ^^^^^^^^

warning: unused imports: `HotReloadEvent` and `HotReloadStatus`
  --> css-in-rust/src/dev_experience/enhanced_hot_reload.rs:16:42
   |
16 | use crate::hot_reload::{HotReloadConfig, HotReloadEvent, HotReloadStatus};
   |                                          ^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^

warning: unused import: `ThemeError`
  --> css-in-rust/src/dev_experience/enhanced_hot_reload.rs:17:20
   |
17 | use crate::theme::{ThemeError, ThemeManager};
   |                    ^^^^^^^^^^

warning: unused import: `HashSet`
 --> css-in-rust/src/hot_reload/mod.rs:5:33
  |
5 | use std::collections::{HashMap, HashSet};
  |                                 ^^^^^^^

warning: unused import: `std::fs`
 --> css-in-rust/src/hot_reload/mod.rs:6:5
  |
6 | use std::fs;
  |     ^^^^^^^

warning: unused import: `std::fs`
 --> css-in-rust/src/hot_reload/reload_manager.rs:6:5
  |
6 | use std::fs;
  |     ^^^^^^^

warning: unused import: `Path`
 --> css-in-rust/src/hot_reload/reload_manager.rs:7:17
  |
7 | use std::path::{Path, PathBuf};
  |                 ^^^^

warning: unused import: `ChangeType`
  --> css-in-rust/src/hot_reload/reload_manager.rs:13:46
   |
13 | use super::change_detector::{ChangeDetector, ChangeType, FileChange};
   |                                              ^^^^^^^^^^

warning: unused import: `Path`
 --> css-in-rust/src/performance/cache.rs:9:17
  |
9 | use std::path::{Path, PathBuf};
  |                 ^^^^

warning: unused import: `Instant`
  --> css-in-rust/src/performance/mod.rs:16:27
   |
16 | use std::time::{Duration, Instant};
   |                           ^^^^^^^

warning: unused import: `std::io::Write`
   --> css-in-rust/src/theme/css_variables.rs:538:13
    |
538 |         use std::io::Write;
    |             ^^^^^^^^^^^^^^

warning: unused import: `VariantConfig`
 --> css-in-rust/src/variants/conditional_styles.rs:5:13
  |
5 | use super::{VariantConfig, VariantStyle};
  |             ^^^^^^^^^^^^^

warning: unused import: `BTreeMap`
 --> css-in-rust/src/variants/priority_manager.rs:7:24
  |
7 | use std::collections::{BTreeMap, HashMap};
  |                        ^^^^^^^^

warning: use of deprecated function `base64::encode`: Use Engine::encode
   --> css-in-rust/src/hot_reload/websocket_server.rs:570:17
    |
570 |         base64::encode(hash)
    |                 ^^^^^^
    |
    = note: `#[warn(deprecated)]` on by default

error[E0382]: borrow of partially moved value: `impact`
   --> css-in-rust/src/dev_experience/enhanced_hot_reload.rs:459:79
    |
459 |             ReloadStrategy::Custom(strategy) => self.custom_reload(&strategy, &impact).await?,
    |                                    -------- value partially moved here        ^^^^^^^ value borrowed here after partial move
    |
    = note: partial move occurs because value has type `std::string::String`, which does not implement the `Copy` trait
help: borrow this binding in the pattern to avoid moving the value
    |
459 |             ReloadStrategy::Custom(ref strategy) => self.custom_reload(&strategy, &impact).await?,
    |                                    +++

error[E0061]: this method takes 3 arguments but 1 argument was supplied
   --> css-in-rust/src/animation/animation_engine.rs:72:49
    |
72  |                 if let Some(cached_css) = cache.get(&cache_key) {
    |                                                 ^^^------------ two arguments of type `&str` and `&str` are missing
    |
note: method defined here
   --> css-in-rust/src/performance/cache.rs:189:12
    |
189 |     pub fn get(&mut self, key: &str, source_hash: &str, config_hash: &str) -> Option<String> {
    |            ^^^                       -----------------  -----------------
help: provide the arguments
    |
72  |                 if let Some(cached_css) = cache.get(&cache_key, /* &str */, /* &str */) {
    |                                                               ++++++++++++++++++++++++

error[E0061]: this method takes 4 arguments but 2 arguments were supplied
   --> css-in-rust/src/animation/animation_engine.rs:84:23
    |
84  |                 cache.set(cache_key, css.clone());
    |                       ^^^------------------------ two arguments of type `std::string::String` and `std::string::String` are missing
    |
note: method defined here
   --> css-in-rust/src/performance/cache.rs:217:12
    |
217 |     pub fn set(&mut self, key: String, value: String, source_hash: String, config_hash: String) {
    |            ^^^                                        -------------------  -------------------
help: provide the arguments
    |
84  |                 cache.set(cache_key, css.clone(), /* std::string::String */, /* std::string::String */);
    |                                                 ++++++++++++++++++++++++++++++++++++++++++++++++++++++

error[E0277]: the trait bound `Instant: Serialize` is not satisfied
    --> css-in-rust/src/dev_experience/enhanced_hot_reload.rs:49:24
     |
49   |   #[derive(Debug, Clone, Serialize)]
     |                          ^^^^^^^^^ the trait `Serialize` is not implemented for `Instant`
...
61   | /     /// 最后修改时间
62   | |     pub last_modified: Instant,
     | |______________________________- required by a bound introduced by this call
     |
     = note: for local types consider adding `#[derive(serde::Serialize)]` to your `Instant` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Serialize`:
               &'a T
               &'a mut T
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
               (T0, T1, T2, T3, T4)
             and 322 others
note: required by a bound in `animation::_::_serde::ser::SerializeStruct::serialize_field`
    --> /Users/zxl/.cargo/registry/src/rsproxy.cn-e3de039b2554c837/serde-1.0.219/src/ser/mod.rs:1866:21
     |
1864 |     fn serialize_field<T>(&mut self, key: &'static str, value: &T) -> Result<(), Self::Error>
     |        --------------- required by a bound in this associated function
1865 |     where
1866 |         T: ?Sized + Serialize;
     |                     ^^^^^^^^^ required by this bound in `SerializeStruct::serialize_field`
     = note: this error originates in the derive macro `Serialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `Instant: std::default::Default` is not satisfied
   --> css-in-rust/src/dev_experience/enhanced_hot_reload.rs:351:35
    |
351 | #[derive(Debug, Clone, Serialize, Deserialize)]
    |                                   ^^^^^^^^^^^ the trait `std::default::Default` is not implemented for `Instant`
    |
    = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `max_entries` on type `CacheConfig`
   --> css-in-rust/src/performance/cache.rs:291:21
    |
291 |         self.config.max_entries
    |                     ^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `max_size`, `ttl`, `enable_compression`, `enable_persistence`, `cache_dir`

error[E0308]: mismatched types
   --> css-in-rust/src/theme/design_token_system.rs:911:21
    |
911 |               styles: vec![
    |  _____________________^
912 | |                 "solid".to_string(),
913 | |                 "dashed".to_string(),
914 | |                 "dotted".to_string(),
915 | |             ],
    | |_____________^ expected `BTreeMap<String, String>`, found `Vec<String>`
    |
    = note: expected struct `BTreeMap<std::string::String, std::string::String>`
               found struct `Vec<std::string::String>`
    = note: this error originates in the macro `vec` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0560]: struct `SemanticSizing` has no field named `button_height`
    --> css-in-rust/src/theme/design_token_system.rs:1639:13
     |
1639 |             button_height: "32px".to_string(),
     |             ^^^^^^^^^^^^^ `SemanticSizing` does not have this field
     |
     = note: available fields are: `component`, `icon`, `avatar`

error[E0560]: struct `SemanticSizing` has no field named `input_height`
    --> css-in-rust/src/theme/design_token_system.rs:1640:13
     |
1640 |             input_height: "32px".to_string(),
     |             ^^^^^^^^^^^^ `SemanticSizing` does not have this field
     |
     = note: available fields are: `component`, `icon`, `avatar`

error[E0560]: struct `SemanticSizing` has no field named `component_min_width`
    --> css-in-rust/src/theme/design_token_system.rs:1641:13
     |
1641 |             component_min_width: "64px".to_string(),
     |             ^^^^^^^^^^^^^^^^^^^ `SemanticSizing` does not have this field
     |
     = note: available fields are: `component`, `icon`, `avatar`

error[E0560]: struct `SemanticSizing` has no field named `component_max_width`
    --> css-in-rust/src/theme/design_token_system.rs:1642:13
     |
1642 |             component_max_width: "100%".to_string(),
     |             ^^^^^^^^^^^^^^^^^^^ `SemanticSizing` does not have this field
     |
     = note: available fields are: `component`, `icon`, `avatar`

warning: variable does not need to be mutable
   --> css-in-rust/src/animation/keyframes.rs:145:17
    |
145 |     pub fn step(mut self, percentage: u8) -> KeyframeStepBuilder {
    |                 ----^^^^
    |                 |
    |                 help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused variable: `class`
   --> css-in-rust/src/core/optimizer.rs:280:25
    |
280 |                     for class in classes.as_str().split_whitespace() {
    |                         ^^^^^ help: if this is intentional, prefix it with an underscore: `_class`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `id`
   --> css-in-rust/src/core/optimizer.rs:291:29
    |
291 |                 if let Some(id) = captures.get(1) {
    |                             ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `class`
   --> css-in-rust/src/core/optimizer.rs:303:29
    |
303 |                 if let Some(class) = captures.get(1) {
    |                             ^^^^^ help: if this is intentional, prefix it with an underscore: `_class`

warning: unused variable: `id`
   --> css-in-rust/src/core/optimizer.rs:311:29
    |
311 |                 if let Some(id) = captures.get(1) {
    |                             ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `code`
   --> css-in-rust/src/dev_experience/diagnostics.rs:537:21
    |
537 |     fn check(&self, code: &str, _file_path: &str) -> Vec<Diagnostic> {
    |                     ^^^^ help: if this is intentional, prefix it with an underscore: `_code`

warning: unused variable: `path`
   --> css-in-rust/src/hot_reload/change_detector.rs:571:36
    |
571 |     fn analyze_dependencies(&self, path: &Path) -> Result<Vec<PathBuf>, ChangeDetectorError> {
    |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_path`

warning: unused variable: `debounce_delay`
   --> css-in-rust/src/hot_reload/mod.rs:447:9
    |
447 |         debounce_delay: Duration,
    |         ^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_debounce_delay`

warning: unused variable: `start_time`
  --> css-in-rust/src/performance/metrics.rs:72:47
   |
72 |     pub fn new(operation_type: OperationType, start_time: Instant, duration: Duration) -> Self {
   |                                               ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_start_time`

warning: unused variable: `path`
   --> css-in-rust/src/theme/design_token_system.rs:574:35
    |
574 |     pub fn get_token_value(&self, path: &str) -> Option<crate::theme::TokenValue> {
    |                                   ^^^^ help: if this is intentional, prefix it with an underscore: `_path`

warning: unused variable: `path`
   --> css-in-rust/src/theme/design_token_system.rs:583:9
    |
583 |         path: &str,
    |         ^^^^ help: if this is intentional, prefix it with an underscore: `_path`

warning: unused variable: `value`
   --> css-in-rust/src/theme/design_token_system.rs:584:9
    |
584 |         value: crate::theme::TokenValue,
    |         ^^^^^ help: if this is intentional, prefix it with an underscore: `_value`

warning: variable does not need to be mutable
   --> css-in-rust/src/theme/design_token_system.rs:686:13
    |
686 |         let mut errors = Vec::new();
    |             ----^^^^^^
    |             |
    |             help: remove this `mut`

warning: unused variable: `variant_value`
   --> css-in-rust/src/variants/responsive.rs:189:27
    |
189 |         for (variant_key, variant_value) in variants {
    |                           ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_variant_value`

Some errors have detailed explanations: E0061, E0277, E0308, E0382, E0560, E0609.
For more information about an error, try `rustc --explain E0061`.
warning: `css-in-rust` (lib) generated 32 warnings
error: could not compile `css-in-rust` (lib) due to 12 previous errors; 32 warnings emitted
warning: build failed, waiting for other jobs to finish...
warning: `css-in-rust` (lib) generated 32 warnings (32 duplicates)
error: could not compile `css-in-rust` (lib) due to 12 previous errors; 32 warnings emitted
